[{"C:\\Users\\user\\Desktop\\AtraProject\\Frontend\\src\\index.js":"1","C:\\Users\\user\\Desktop\\AtraProject\\Frontend\\src\\App.js":"2","C:\\Users\\user\\Desktop\\AtraProject\\Frontend\\src\\reportWebVitals.js":"3","C:\\Users\\user\\Desktop\\AtraProject\\Frontend\\src\\Redux\\Store.js":"4","C:\\Users\\user\\Desktop\\AtraProject\\Frontend\\src\\Redux\\Reducers\\ImgeReducer.js":"5","C:\\Users\\user\\Desktop\\AtraProject\\Frontend\\src\\Redux\\Middlewaes\\crud.js":"6","C:\\Users\\user\\Desktop\\AtraProject\\Frontend\\src\\Redux\\Reducers\\UserReducer.js":"7","C:\\Users\\user\\Desktop\\AtraProject\\Frontend\\src\\Redux\\Actions\\UserActions.js":"8","C:\\Users\\user\\Desktop\\AtraProject\\Frontend\\src\\Redux\\Reducers\\reducerUtils.js":"9","C:\\Users\\user\\Desktop\\AtraProject\\Frontend\\src\\Components\\Redux_form\\formValidator.js":"10","C:\\Users\\user\\Desktop\\AtraProject\\Frontend\\src\\Components\\Redux_form\\inputControl.js":"11","C:\\Users\\user\\Desktop\\AtraProject\\Frontend\\src\\Components\\Global\\Routers.js":"12","C:\\Users\\user\\Desktop\\AtraProject\\Frontend\\src\\Components\\Global\\Menu.js":"13","C:\\Users\\user\\Desktop\\AtraProject\\Frontend\\src\\Components\\Images.js":"14","C:\\Users\\user\\Desktop\\AtraProject\\Frontend\\src\\Components\\Login\\Login.js":"15","C:\\Users\\user\\Desktop\\AtraProject\\Frontend\\src\\Components\\UserHome\\MyHistory.js":"16","C:\\Users\\user\\Desktop\\AtraProject\\Frontend\\src\\Components\\Login\\NewUser.js":"17","C:\\Users\\user\\Desktop\\AtraProject\\Frontend\\src\\Components\\HomePage.js":"18","C:\\Users\\user\\Desktop\\AtraProject\\Frontend\\src\\Redux\\Actions\\ImgeActions.js":"19","C:\\Users\\user\\Desktop\\AtraProject\\Frontend\\src\\Components\\UserHome\\NewImage.js":"20","C:\\Users\\user\\Desktop\\AtraProject\\Frontend\\src\\Components\\UserHome\\UpdateImage.js":"21","C:\\Users\\user\\Desktop\\AtraRacheliMiri\\Frontend\\src\\index.js":"22","C:\\Users\\user\\Desktop\\AtraRacheliMiri\\Frontend\\src\\App.js":"23","C:\\Users\\user\\Desktop\\AtraRacheliMiri\\Frontend\\src\\reportWebVitals.js":"24","C:\\Users\\user\\Desktop\\AtraRacheliMiri\\Frontend\\src\\Redux\\Store.js":"25","C:\\Users\\user\\Desktop\\AtraRacheliMiri\\Frontend\\src\\Redux\\Reducers\\UserReducer.js":"26","C:\\Users\\user\\Desktop\\AtraRacheliMiri\\Frontend\\src\\Components\\Global\\Routers.js":"27","C:\\Users\\user\\Desktop\\AtraRacheliMiri\\Frontend\\src\\Redux\\Reducers\\ImgeReducer.js":"28","C:\\Users\\user\\Desktop\\AtraRacheliMiri\\Frontend\\src\\Redux\\Middlewaes\\crud.js":"29","C:\\Users\\user\\Desktop\\AtraRacheliMiri\\Frontend\\src\\Components\\Images.js":"30","C:\\Users\\user\\Desktop\\AtraRacheliMiri\\Frontend\\src\\Redux\\Reducers\\reducerUtils.js":"31","C:\\Users\\user\\Desktop\\AtraRacheliMiri\\Frontend\\src\\Components\\Global\\Menu.js":"32","C:\\Users\\user\\Desktop\\AtraRacheliMiri\\Frontend\\src\\Components\\HomePage.js":"33","C:\\Users\\user\\Desktop\\AtraRacheliMiri\\Frontend\\src\\Components\\Login\\Login.js":"34","C:\\Users\\user\\Desktop\\AtraRacheliMiri\\Frontend\\src\\Components\\UserHome\\MyHistory.js":"35","C:\\Users\\user\\Desktop\\AtraRacheliMiri\\Frontend\\src\\Components\\UserHome\\UpdateImage.js":"36","C:\\Users\\user\\Desktop\\AtraRacheliMiri\\Frontend\\src\\Components\\UserHome\\NewImage.js":"37","C:\\Users\\user\\Desktop\\AtraRacheliMiri\\Frontend\\src\\Components\\Login\\NewUser.js":"38","C:\\Users\\user\\Desktop\\AtraRacheliMiri\\Frontend\\src\\Redux\\Actions\\UserActions.js":"39","C:\\Users\\user\\Desktop\\AtraRacheliMiri\\Frontend\\src\\Redux\\Actions\\ImgeActions.js":"40","C:\\Users\\user\\Desktop\\AtraRacheliMiri\\Frontend\\src\\Components\\Redux_form\\formValidator.js":"41","C:\\Users\\user\\Desktop\\AtraRacheliMiri\\Frontend\\src\\Components\\Redux_form\\inputControl.js":"42"},{"size":571,"mtime":1613863778560,"results":"43","hashOfConfig":"44"},{"size":446,"mtime":1613863621415,"results":"45","hashOfConfig":"44"},{"size":362,"mtime":1613518488000,"results":"46","hashOfConfig":"44"},{"size":562,"mtime":1613863756404,"results":"47","hashOfConfig":"44"},{"size":1278,"mtime":1613652020647,"results":"48","hashOfConfig":"44"},{"size":2337,"mtime":1613899074833,"results":"49","hashOfConfig":"44"},{"size":1332,"mtime":1613849387870,"results":"50","hashOfConfig":"44"},{"size":689,"mtime":1613518488000,"results":"51","hashOfConfig":"44"},{"size":352,"mtime":1613518488000,"results":"52","hashOfConfig":"44"},{"size":1440,"mtime":1616328437287,"results":"53","hashOfConfig":"44"},{"size":468,"mtime":1613670571932,"results":"54","hashOfConfig":"44"},{"size":1719,"mtime":1614855518636,"results":"55","hashOfConfig":"44"},{"size":839,"mtime":1613863640083,"results":"56","hashOfConfig":"44"},{"size":1789,"mtime":1614856167294,"results":"57","hashOfConfig":"44"},{"size":3353,"mtime":1613868155312,"results":"58","hashOfConfig":"44"},{"size":2724,"mtime":1614856213828,"results":"59","hashOfConfig":"44"},{"size":3667,"mtime":1613899004765,"results":"60","hashOfConfig":"44"},{"size":1445,"mtime":1613864739056,"results":"61","hashOfConfig":"44"},{"size":652,"mtime":1613518488000,"results":"62","hashOfConfig":"44"},{"size":10840,"mtime":1613905903797,"results":"63","hashOfConfig":"44"},{"size":9587,"mtime":1613905871099,"results":"64","hashOfConfig":"44"},{"size":571,"mtime":1613863778560,"results":"65","hashOfConfig":"66"},{"size":446,"mtime":1618122296095,"results":"67","hashOfConfig":"66"},{"size":362,"mtime":1613518488000,"results":"68","hashOfConfig":"66"},{"size":562,"mtime":1613863756404,"results":"69","hashOfConfig":"66"},{"size":1332,"mtime":1613849387870,"results":"70","hashOfConfig":"66"},{"size":1747,"mtime":1619423028883,"results":"71","hashOfConfig":"66"},{"size":1291,"mtime":1619394617081,"results":"72","hashOfConfig":"66"},{"size":2337,"mtime":1613899074833,"results":"73","hashOfConfig":"66"},{"size":2101,"mtime":1619393749846,"results":"74","hashOfConfig":"66"},{"size":352,"mtime":1613518488000,"results":"75","hashOfConfig":"66"},{"size":799,"mtime":1619388376665,"results":"76","hashOfConfig":"66"},{"size":1436,"mtime":1619423274348,"results":"77","hashOfConfig":"66"},{"size":3358,"mtime":1619388409526,"results":"78","hashOfConfig":"66"},{"size":2538,"mtime":1619422356894,"results":"79","hashOfConfig":"66"},{"size":9587,"mtime":1613905871099,"results":"80","hashOfConfig":"66"},{"size":7634,"mtime":1619422433885,"results":"81","hashOfConfig":"66"},{"size":3672,"mtime":1619391509176,"results":"82","hashOfConfig":"66"},{"size":689,"mtime":1613518488000,"results":"83","hashOfConfig":"66"},{"size":652,"mtime":1613518488000,"results":"84","hashOfConfig":"66"},{"size":1440,"mtime":1616328437287,"results":"85","hashOfConfig":"66"},{"size":468,"mtime":1613670571932,"results":"86","hashOfConfig":"66"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},"kyh9yb",{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"89"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"89"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"89"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},"bzcy0r",{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"135"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"135"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"164","messages":"165","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"135"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},"C:\\Users\\user\\Desktop\\AtraProject\\Frontend\\src\\index.js",[],["178","179"],"C:\\Users\\user\\Desktop\\AtraProject\\Frontend\\src\\App.js",[],"C:\\Users\\user\\Desktop\\AtraProject\\Frontend\\src\\reportWebVitals.js",[],"C:\\Users\\user\\Desktop\\AtraProject\\Frontend\\src\\Redux\\Store.js",[],"C:\\Users\\user\\Desktop\\AtraProject\\Frontend\\src\\Redux\\Reducers\\ImgeReducer.js",[],"C:\\Users\\user\\Desktop\\AtraProject\\Frontend\\src\\Redux\\Middlewaes\\crud.js",[],"C:\\Users\\user\\Desktop\\AtraProject\\Frontend\\src\\Redux\\Reducers\\UserReducer.js",[],"C:\\Users\\user\\Desktop\\AtraProject\\Frontend\\src\\Redux\\Actions\\UserActions.js",[],"C:\\Users\\user\\Desktop\\AtraProject\\Frontend\\src\\Redux\\Reducers\\reducerUtils.js",[],"C:\\Users\\user\\Desktop\\AtraProject\\Frontend\\src\\Components\\Redux_form\\formValidator.js",[],"C:\\Users\\user\\Desktop\\AtraProject\\Frontend\\src\\Components\\Redux_form\\inputControl.js",[],"C:\\Users\\user\\Desktop\\AtraProject\\Frontend\\src\\Components\\Global\\Routers.js",[],"C:\\Users\\user\\Desktop\\AtraProject\\Frontend\\src\\Components\\Global\\Menu.js",[],"C:\\Users\\user\\Desktop\\AtraProject\\Frontend\\src\\Components\\Images.js",[],"C:\\Users\\user\\Desktop\\AtraProject\\Frontend\\src\\Components\\Login\\Login.js",["180"],"import React from 'react'\r\nimport { reduxForm  } from \"redux-form\";\r\nimport { formValidatorHelper } from \"../Redux_form/formValidator\";\r\nimport { connect } from \"react-redux\";\r\nimport { actionsUser } from \"../../Redux/Actions/UserActions\";\r\nimport { AiOutlineLogin } from \"react-icons/ai\";\r\nimport { withRouter, Redirect } from \"react-router-dom\";\r\n\r\nimport './login.css'\r\nimport '../Global/menu.css'\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        user: state.userReducer.user,\r\n        newI: state.userReducer.new\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => (\r\n\r\n    {\r\n        setUserName: (name) => dispatch(actionsUser.setUserName(name)),\r\n        setUserPass: (password) => dispatch(actionsUser.setUserPass(password)),\r\n        login: () => dispatch(actionsUser.login()),\r\n    }\r\n\r\n)\r\nconst Login = withRouter(connect(mapStateToProps, mapDispatchToProps)(function Login(props) {\r\n  \r\n    const { user, newI, setUserName, setUserPass, login } = props\r\n    if (newI == 1) {\r\n        alert(\"You do not have an account yet, You need to register\")\r\n        return <Redirect to={{ pathname: '/sighUp' }} />\r\n    }\r\n    if (user.email !== '') {\r\n        alert(\"hello\");\r\n        return <Redirect to={{ pathname: '/album' }} />\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row main-content bg-success text-center\">\r\n                        <div className=\"col-md-4 text-center company__info\">\r\n                            <span className=\"company__logo\"><h2><span className=\"fa fa-android\"></span></h2></span>\r\n                            <h4 className=\"company_title\"><AiOutlineLogin /></h4>\r\n                        </div>\r\n                        <div className=\"col-md-8 col-xs-12 col-sm-12 login_form \">\r\n                            <div className=\"container-fluid\">\r\n                                <div className=\"row\">\r\n                                    <h2><AiOutlineLogin /> Login</h2>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"row\">\r\n                                        <input type=\"text\" name=\"username\" id=\"username\" className=\"form__input\" placeholder=\"Username\" onChange={(e) => setUserName(e.target.value)}></input>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <span className=\"fa fa-lock\"></span>\r\n                                        <input type=\"password\" name=\"password\" id=\"password\" className=\"form__input\" placeholder=\"Password\" onChange={(e) => setUserPass(e.target.value)}></input>\r\n                                    </div>\r\n                                    <br></br>\r\n\r\n                                </div>\r\n                                <div className=\"row col-8\">\r\n                                    <input type=\"submit\" value=\"Submit\" className=\"btn\" onClick={() => login()}></input>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}))\r\n\r\n\r\nexport default reduxForm({\r\n    form: \"Login\",\r\n    validate: formValidatorHelper\r\n})\r\n    (Login)\r\n","C:\\Users\\user\\Desktop\\AtraProject\\Frontend\\src\\Components\\UserHome\\MyHistory.js",["181","182"],"C:\\Users\\user\\Desktop\\AtraProject\\Frontend\\src\\Components\\Login\\NewUser.js",[],"C:\\Users\\user\\Desktop\\AtraProject\\Frontend\\src\\Components\\HomePage.js",[],"C:\\Users\\user\\Desktop\\AtraProject\\Frontend\\src\\Redux\\Actions\\ImgeActions.js",[],"C:\\Users\\user\\Desktop\\AtraProject\\Frontend\\src\\Components\\UserHome\\NewImage.js",["183","184","185","186","187","188","189","190"],"import React, { useState } from 'react'\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport { formValidatorHelper } from \"../Redux_form/formValidator\";\r\nimport { input } from \"../Redux_form/inputControl\";\r\nimport { connect } from \"react-redux\";\r\nimport \"../images.css\";\r\nimport \"../Login/login.css\";\r\nimport \"./user.css\";\r\n\r\nimport { AiOutlineAndroid, AiOutlinePicCenter, AiOutlinePicture, AiOutlineUserAdd } from \"react-icons/ai\";\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        user: state.userReducer.user,\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => (\r\n\r\n    {\r\n\r\n    }\r\n)\r\nconst NewImage = connect(mapStateToProps, mapDispatchToProps)(function (props) {\r\n    const { user, handleSubmit, reset, pristine, submitting, valid } = props\r\n    // const [handleFileInput, setHandleFileInput] = useState('');\r\n    const [albumId, setAlbumId] = useState(0);\r\n    const [id, setId] = useState(0);\r\n    const [title, setTitle] = useState('');\r\n    const [url, setUrl] = useState('');\r\n    const [thumbnailUrl, setThumbnailUrl] = useState('');\r\n    function createMyImage() {\r\n        fetch('http://localhost:5000/Images/createMyImage',\r\n            {\r\n                method: 'POST',\r\n                body: JSON.stringify(\r\n                    {\r\n                        \"albumId\": albumId,\r\n                        \"id\": id,\r\n                        \"title\": title,\r\n                        \"url\": url,\r\n                        \"thumbnailUrl\": thumbnailUrl,\r\n                        \"user_id\": user.id\r\n                    }\r\n                ),\r\n                headers: {\r\n                    'Content-type': 'application/json; charset=UTF-8',\r\n                }\r\n            })\r\n            .then(response => {\r\n\r\n                response.json()\r\n            })\r\n            .then(json => { })\r\n            .catch((err) => {\r\n                console.log(\"err\" + err);\r\n            })\r\n\r\n\r\n        // (url ולא רק העתקת) העלאת תמונה לשרת באופן ממשי\r\n\r\n        // var myHeaders = new Headers();\r\n        // myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n\r\n        // var formdata = new FormData();\r\n        // formdata.append(\"albumId\", albumId);\r\n        // formdata.append(\" id\", id);\r\n        // formdata.append(\"title\", title);\r\n        // formdata.append(\"thumbnailUrl\", thumbnailUrl);\r\n        // formdata.append(\"user_id\", user_id);\r\n        // formdata.append(\"image\", fileInput.files[0], \"/C:/Users/This_user/Pictures/Saved Pictures/menorah.png\");\r\n\r\n        // var requestOptions = {\r\n        //     method: 'POST',\r\n        //     headers: myHeaders,\r\n        //     body: formdata,\r\n        //     redirect: 'follow'\r\n        // };\r\n\r\n        // fetch(\"http://localhost:5000/images/upload\", requestOptions)\r\n        //     .then(response => response.text())\r\n        //     .then(result => console.log(result))\r\n        //     .catch(error => console.log('error', error));\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"container-fluid col-8\">\r\n                <div className=\"row main-content bg-success text-center\">\r\n                    <div className=\"col-4 text-center company__info gg\">\r\n                        {/* <span className=\"company__logo\"><h2><span className=\"fa fa-android\"></span></h2></span> */}\r\n                        <h4 className=\"company_title\"><AiOutlinePicCenter /></h4>\r\n\r\n                    </div>\r\n\r\n                    <div className=\"col-md-8 col-xs-12 col-sm-12 login_form \">\r\n                        <div className=\"container-fluid\">\r\n                            <div className=\"row\">\r\n                                <h5><AiOutlinePicCenter /> Up load your image</h5>\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"row\">\r\n                                    <input name=\"albumId\" type=\"number\" id=\"albumId\" className=\"form__input\" placeholder=\"enter albumId\" onChange={e => setAlbumId(e.target.value)}></input>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <span className=\"fa fa-lock\"></span>\r\n                                    <input type=\"number\" name=\"id\" id=\"id\" className=\"form__input\" placeholder=\"enter id\" onChange={e => setId(e.target.value)}></input>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <input name=\"title\" type=\"text\" id=\"title\" className=\"form__input\" placeholder=\"enter your title\" onChange={e => setTitle(e.target.value)}></input>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <input name=\"url\" type=\"text\" id=\"url\" className=\"form__input\" placeholder=\"enter url\" onChange={e => setUrl(e.target.value)}></input>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <input name=\"thumbnailUrl\" type=\"text\" id=\"thumbnailUrl\" className=\"form__input\" placeholder=\"enter thumbnailUrl\" onChange={e => setThumbnailUrl(e.target.value)}></input>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <input name=\"url\" type=\"text\" id=\"url\" className=\"form__input\" placeholder=\"enter url\" onChange={e => setUrl(e.target.value)}></input>\r\n                                </div>\r\n                                <br></br>\r\n                                <div className=\"row col-8\">\r\n                                    <button type=\"submit\" value=\"Submit\" className=\"btn\" onClick={() => createMyImage()}>save</button>\r\n                                    <button className=\"btn\" onClick={reset}>reset</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* <div>\r\n                <form onSubmit={handleSubmit((values) => { createMyImage() })}>\r\n                    <table>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td>\r\n                                    <label>albumId:</label>\r\n                                </td>\r\n                                <td>\r\n                                    <Field\r\n                                        name=\"albumId\"\r\n                                        type=\"number\"\r\n                                        component={input}\r\n                                        id=\"albumId\"\r\n                                        placeholder=\"enter albumId\"\r\n                                        className=\"clsss\"\r\n                                        onChange={e => setAlbumId(e.target.value)}\r\n\r\n                                    />\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <label>id:</label>\r\n                                </td>\r\n                                <td>\r\n                                    <Field\r\n                                        name=\"id\"\r\n                                        type=\"number\"\r\n                                        component={input}\r\n                                        id=\"id\"\r\n                                        placeholder=\"enter id\"\r\n                                        onChange={e => setId(e.target.value)}\r\n                                        className=\"clsss\"\r\n\r\n                                    />\r\n\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <label>title:</label>\r\n                                </td>\r\n                                <td>\r\n                                    <Field\r\n                                        name=\"title\"\r\n                                        type=\"text\"\r\n                                        component={input}\r\n                                        id=\"title\"\r\n                                        placeholder=\"enter your title\"\r\n                                        onChange={e => setTitle(e.target.value)}\r\n                                        className=\"clsss\"\r\n\r\n                                    />\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <label>url:</label>\r\n                                </td>\r\n                                <td>\r\n                                    <Field\r\n                                        name=\"url\"\r\n                                        type=\"text\"\r\n                                        component={input}\r\n                                        id=\"url\"\r\n                                        placeholder=\"enter url\"\r\n                                        onChange={e => setUrl(e.target.value)}\r\n                                        className=\"clsss\"\r\n\r\n                                    />\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <label>thumbnailUrl:</label>\r\n                                </td>\r\n                                <td>\r\n                                    <Field\r\n                                        name=\"thumbnailUrl\"\r\n                                        type=\"text\"\r\n                                        component={input}\r\n                                        id=\"thumbnailUrl\"\r\n                                        placeholder=\"enter thumbnailUrl\"\r\n                                        onChange={e => setThumbnailUrl(e.target.value)}\r\n                                        className=\"clsss\"\r\n\r\n                                    />\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td><button type=\"submit\"\r\n                                    disabled={!valid || pristine || submitting}\r\n                                >Submit</button></td>\r\n                                <td><button type=\"button\" onClick={reset}>Reset</button></td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </form>\r\n            </div>\r\n\r\n        </> */}\r\n        </>\r\n    )\r\n})\r\n\r\n\r\nexport default reduxForm({\r\n    form: \"NewImage\",\r\n    validate: formValidatorHelper\r\n})\r\n    (NewImage)\r\n\r\n\r\n\r\n","C:\\Users\\user\\Desktop\\AtraProject\\Frontend\\src\\Components\\UserHome\\UpdateImage.js",["191","192","193"],"import React from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport { actionsImage } from \"../../Redux/Actions/ImgeActions\";\r\nimport  \"./user.css\";\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        user: state.userReducer.user,\r\n        image: state.imageReducer.image,\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => (\r\n\r\n    {\r\n        setAlbumId: (albumId) => dispatch(actionsImage.setAlbumId(albumId)),\r\n        setId: (id) => dispatch(actionsImage.setId(id)),\r\n        setTitle: (title) => dispatch(actionsImage.setTitle(title)),\r\n        setUrl: (url) => dispatch(actionsImage.setUrl(url)),\r\n        setThumbnailUrl: (thumbnailUrl) => dispatch(actionsImage.setThumbnailUrl(thumbnailUrl)),\r\n    }\r\n)\r\nexport default connect(mapStateToProps, mapDispatchToProps)(function (props) {\r\n    const { reset, image, setAlbumId, setId, setTitle, setUrl, setThumbnailUrl, submitting, valid, pristine } = props\r\n    function updateImage(image) {\r\n        var myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n        var requestOptions = {\r\n            method: 'PATCH',\r\n            headers: myHeaders,\r\n            body: JSON.stringify(image),\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(`http://localhost:5000/images/updateImage/${image._id}`, requestOptions)\r\n            .then(response => response.text())\r\n            .then(result => console.log(result))\r\n            .catch(error => console.log('error', error));\r\n\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row main-content bg-success text-center\">\r\n                    <div className=\"col-4 text-center company__info gg\">\r\n                        {/* <span className=\"company__logo\"><h2><span className=\"fa fa-android\"></span></h2></span>\r\n                            <h4 className=\"company_title\"></h4> */}\r\n                    </div>\r\n                    <div className=\"col-md-8 col-xs-12 col-sm-12 login_form \">\r\n                        <div className=\"container-fluid\">\r\n                            <div className=\"row\">\r\n                            </div>\r\n                            <div className=\"row\">\r\n                                <div className=\"row\">\r\n                                    <input name=\"albumId\" type=\"number\" value={image.albumId} id=\"albumId\" className=\"form__input\" placeholder=\"enter albumId\" onChange={e => setAlbumId(e.target.value)}></input>\r\n                                </div>\r\n\r\n                                <div className=\"row\">\r\n                                    <span className=\"fa fa-lock\"></span>\r\n                                    <input type=\"number\" name=\"id\" id=\"id\" value={image.id} className=\"form__input\" placeholder=\"enter id\" onChange={e => setId(e.target.value)}></input>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <input name=\"title\" type=\"text\" id=\"title\" value={image.title} className=\"form__input\" placeholder=\"enter your title\" onChange={e => setTitle(e.target.value)}></input>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <input name=\"url\" type=\"text\" id=\"url\" value={image.url} className=\"form__input\" placeholder=\"enter url\" onChange={e => setUrl(e.target.value)}></input>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <input name=\"thumbnailUrl\" type=\"text\" value={image.thumbnailUrl} id=\"thumbnailUrl\" className=\"form__input\" placeholder=\"enter thumbnailUrl\" onChange={e => setThumbnailUrl(e.target.value)}></input>\r\n                                </div>\r\n\r\n                                <br></br>\r\n                                <div className=\"row col-8\">\r\n                                    <button  className=\"btn\" onClick={()=>updateImage(image)}>save</button>\r\n                                    <button className=\"btn\" onClick={reset}>reset</button>\r\n                                </div>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {/* <input type=\"number\" name=\"albumId\" id=\"albumId\" value={image.albumId} onChange={(e) => setAlbumId(e.target.value)}></input>\r\n            <input type=\"number\" name=\"idd\" id=\"idd\" value={image.id} onChange={(e) => setId(e.target.value)}></input>\r\n            <input type=\"text\" name=\"title\" id=\"title\" value={image.title} onChange={(e) => setTitle(e.target.value)}></input>\r\n            <input type=\"text\" name=\"url\" id=\"url\" value={image.url} onChange={(e) => setUrl(e.target.value)}></input>\r\n            <input type=\"text\" name=\"thumbnailUrl\" value={image.thumbnailUrl} id=\"thumbnailUrl\" onChange={(e) => setThumbnailUrl(e.target.value)}></input>\r\n            <button onClick={() => updateImage(image)}>Uptade</button> */}\r\n        </>\r\n    )\r\n})\r\n\r\n//     return (\r\n//         <>\r\n//             <div>\r\n//                 <form onSubmit={handleSubmit((values) => { updateImage(values) })}>\r\n//                     <table>\r\n//                         <tbody>\r\n//                             <tr>\r\n//                                 <td>\r\n//                                     <label>albumId:</label>\r\n//                                 </td>\r\n//                                 <td>\r\n//                                     <Field\r\n//                                         name=\"albumId\"\r\n//                                         type=\"number\"\r\n//                                         component={input}\r\n//                                         id=\"albumId\"\r\n//                                         placeholder=\"enter albumId\"\r\n//                                         value={image.albumId}\r\n//                                     />\r\n//                                 </td>\r\n//                             </tr>\r\n//                             <tr>\r\n//                                 <td>\r\n//                                     <label>id:</label>\r\n//                                 </td>\r\n//                                 <td>\r\n//                                     <Field\r\n//                                         name=\"id\"\r\n//                                         type=\"number\"\r\n//                                         component={input}\r\n//                                         id=\"id\"\r\n//                                         placeholder=\"enter id\"\r\n//                                         value={image.title} />\r\n//                                 </td>\r\n//                             </tr>\r\n//                             <tr>\r\n//                                 <td>\r\n//                                     <label>title:</label>\r\n//                                 </td>\r\n//                                 <td>\r\n//                                     <Field\r\n\r\n//                                         name=\"title\"\r\n//                                         type=\"text\"\r\n//                                         component={input}\r\n//                                         id=\"title\"\r\n//                                         placeholder=\"enter your title\"\r\n//                                         value={image.title} />\r\n//                                 </td>\r\n//                             </tr>\r\n//                             <tr>\r\n//                                 <td>\r\n//                                     <label>url:</label>\r\n//                                 </td>\r\n//                                 <td>\r\n//                                     <Field\r\n//                                         name=\"url\"\r\n//                                         type=\"text\"\r\n//                                         component={input}\r\n//                                         id=\"url\"\r\n//                                         placeholder=\"enter url\" />\r\n//                                 </td>\r\n//                             </tr>\r\n//                             <tr>\r\n//                                 <td>\r\n//                                     <label>thumbnailUrl:</label>\r\n//                                 </td>\r\n//                                 <td>\r\n//                                     <Field\r\n//                                         name=\"thumbnailUrl\"\r\n//                                         type=\"text\"\r\n//                                         component={input}\r\n//                                         id=\"thumbnailUrl\"\r\n//                                         placeholder=\"enter thumbnailUrl\" />\r\n//                                 </td>\r\n//                             </tr>\r\n//                             <tr>\r\n//                                 <td><button type=\"submit\"\r\n//                                     disabled={!valid || pristine || submitting}\r\n//                                 >Submit</button></td>\r\n//                                 <td><button type=\"button\" onClick={reset}>Reset</button></td>\r\n//                             </tr>\r\n//                         </tbody>\r\n//                     </table>\r\n//                 </form>\r\n//             </div>\r\n//             {user.id}<br></br>\r\n//             {user.name}<br></br>\r\n//             {user.pass}<br></br>\r\n//             {image.title}\r\n//         </>\r\n//     )\r\n// })\r\n\r\n\r\n// export default reduxForm({\r\n//     form: \"ApdateImage\",\r\n//     validate: formValidatorHelper\r\n// })\r\n//     (ApdateImage)\r\n","C:\\Users\\user\\Desktop\\AtraRacheliMiri\\Frontend\\src\\index.js",[],["194","195"],"C:\\Users\\user\\Desktop\\AtraRacheliMiri\\Frontend\\src\\App.js",[],"C:\\Users\\user\\Desktop\\AtraRacheliMiri\\Frontend\\src\\reportWebVitals.js",[],"C:\\Users\\user\\Desktop\\AtraRacheliMiri\\Frontend\\src\\Redux\\Store.js",[],"C:\\Users\\user\\Desktop\\AtraRacheliMiri\\Frontend\\src\\Redux\\Reducers\\UserReducer.js",[],"C:\\Users\\user\\Desktop\\AtraRacheliMiri\\Frontend\\src\\Components\\Global\\Routers.js",[],"C:\\Users\\user\\Desktop\\AtraRacheliMiri\\Frontend\\src\\Redux\\Reducers\\ImgeReducer.js",[],"C:\\Users\\user\\Desktop\\AtraRacheliMiri\\Frontend\\src\\Redux\\Middlewaes\\crud.js",[],"C:\\Users\\user\\Desktop\\AtraRacheliMiri\\Frontend\\src\\Components\\Images.js",["196","197","198","199"],"import React, { useEffect, useState } from 'react'\r\nimport { FcLike } from \"react-icons/fc\";\r\nimport './Login/login.css'\r\nimport { connect } from \"react-redux\";\r\nimport './images.css'\r\nimport { ReactAudio } from \"reactjs-media/audio\";\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        user: state.userReducer.user,\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(function Images(props) {\r\n    const { user } = props;\r\n    var mone = true;\r\n    const [image, setImage] = useState([])\r\n\r\n    useEffect(\r\n        () => {\r\n            fetch('https://api.nasa.gov/planetary/apod?api_key=l9qlCUbnGof4MaTH8MnqIVrahBSkd8J9C7iiVCxL')\r\n                .then(response => response.json())\r\n                .then(json => { console.log(json); setImage(json) })\r\n                .catch(err => { console.log('error', err) })\r\n        }, [])\r\n\r\n\r\n    function showImage() {\r\n        image[\"user_id\"] = user.id\r\n        console.log(image);\r\n        fetch('http://localhost:5000/Images/createMyImage',\r\n            {\r\n                method: 'POST',\r\n                body: JSON.stringify(\r\n                    image\r\n                ),\r\n                headers: {\r\n                    'Content-type': 'application/json; charset=UTF-8',\r\n                }\r\n            })\r\n            .then(response => { response.json() })\r\n            .then(json => { })\r\n            .catch((err) => {\r\n                console.log(\"err:===\" + err);\r\n            })\r\n\r\n    }\r\n    // if (mone == true) {\r\n    //     mone = false;\r\n        showImage();\r\n\r\n    // }\r\n    return (\r\n        <>\r\n            <div><h2>The pictuer of the Day</h2>\r\n                <img src={image.url} controls=\"controls\" width=\"454\" height=\"193\" autoPlay=\"autoPlay\" className=\"dayI\" ></img>\r\n                {/* <video src={image.url} controls=\"controls\" width=\"454\" height=\"193\" autoPlay=\"autoPlay\" className=\"dayI\" ></video> */}\r\n                <br></br>\r\n            </div>\r\n            {/* <ReactAudio\r\n                src={image.url}\r\n                poster=\"../img/Israe.jpg\"\r\n                \r\n            /> */}\r\n        </>\r\n    )\r\n})\r\n\r\n","C:\\Users\\user\\Desktop\\AtraRacheliMiri\\Frontend\\src\\Redux\\Reducers\\reducerUtils.js",[],"C:\\Users\\user\\Desktop\\AtraRacheliMiri\\Frontend\\src\\Components\\Global\\Menu.js",[],"C:\\Users\\user\\Desktop\\AtraRacheliMiri\\Frontend\\src\\Components\\HomePage.js",[],"C:\\Users\\user\\Desktop\\AtraRacheliMiri\\Frontend\\src\\Components\\Login\\Login.js",["200"],"import React from 'react'\r\nimport { reduxForm  } from \"redux-form\";\r\nimport { formValidatorHelper } from \"../Redux_form/formValidator\";\r\nimport { connect } from \"react-redux\";\r\nimport { actionsUser } from \"../../Redux/Actions/UserActions\";\r\nimport { AiOutlineLogin } from \"react-icons/ai\";\r\nimport { withRouter, Redirect } from \"react-router-dom\";\r\n\r\nimport './login.css'\r\nimport '../Global/menu.css'\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        user: state.userReducer.user,\r\n        newI: state.userReducer.new\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => (\r\n\r\n    {\r\n        setUserName: (name) => dispatch(actionsUser.setUserName(name)),\r\n        setUserPass: (password) => dispatch(actionsUser.setUserPass(password)),\r\n        login: () => dispatch(actionsUser.login()),\r\n    }\r\n\r\n)\r\nconst Login = withRouter(connect(mapStateToProps, mapDispatchToProps)(function Login(props) {\r\n  \r\n    const { user, newI, setUserName, setUserPass, login } = props\r\n    if (newI == 1) {\r\n        alert(\"You do not have an account yet, You need to register\")\r\n        return <Redirect to={{ pathname: '/sighUp' }} />\r\n    }\r\n    if (user.email !== '') {\r\n        alert(\"hello\");\r\n        return <Redirect to={{ pathname: '/pictureDay' }} />\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                <div className=\"container-fluid\">\r\n                    <div className=\"row main-content bg-success text-center\">\r\n                        <div className=\"col-md-4 text-center company__info\">\r\n                            <span className=\"company__logo\"><h2><span className=\"fa fa-android\"></span></h2></span>\r\n                            <h4 className=\"company_title\"><AiOutlineLogin /></h4>\r\n                        </div>\r\n                        <div className=\"col-md-8 col-xs-12 col-sm-12 login_form \">\r\n                            <div className=\"container-fluid\">\r\n                                <div className=\"row\">\r\n                                    <h2><AiOutlineLogin /> Login</h2>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"row\">\r\n                                        <input type=\"text\" name=\"username\" id=\"username\" className=\"form__input\" placeholder=\"Username\" onChange={(e) => setUserName(e.target.value)}></input>\r\n                                    </div>\r\n                                    <div className=\"row\">\r\n                                        <span className=\"fa fa-lock\"></span>\r\n                                        <input type=\"password\" name=\"password\" id=\"password\" className=\"form__input\" placeholder=\"Password\" onChange={(e) => setUserPass(e.target.value)}></input>\r\n                                    </div>\r\n                                    <br></br>\r\n\r\n                                </div>\r\n                                <div className=\"row col-8\">\r\n                                    <input type=\"submit\" value=\"Submit\" className=\"btn\" onClick={() => login()}></input>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </>\r\n    )\r\n}))\r\n\r\n\r\nexport default reduxForm({\r\n    form: \"Login\",\r\n    validate: formValidatorHelper\r\n})\r\n    (Login)\r\n","C:\\Users\\user\\Desktop\\AtraRacheliMiri\\Frontend\\src\\Components\\UserHome\\MyHistory.js",["201","202","203"],"C:\\Users\\user\\Desktop\\AtraRacheliMiri\\Frontend\\src\\Components\\UserHome\\UpdateImage.js",["204","205","206"],"C:\\Users\\user\\Desktop\\AtraRacheliMiri\\Frontend\\src\\Components\\UserHome\\NewImage.js",["207","208","209","210","211","212","213","214","215"],"C:\\Users\\user\\Desktop\\AtraRacheliMiri\\Frontend\\src\\Components\\Login\\NewUser.js",[],"C:\\Users\\user\\Desktop\\AtraRacheliMiri\\Frontend\\src\\Redux\\Actions\\UserActions.js",[],"C:\\Users\\user\\Desktop\\AtraRacheliMiri\\Frontend\\src\\Redux\\Actions\\ImgeActions.js",[],"C:\\Users\\user\\Desktop\\AtraRacheliMiri\\Frontend\\src\\Components\\Redux_form\\formValidator.js",[],"C:\\Users\\user\\Desktop\\AtraRacheliMiri\\Frontend\\src\\Components\\Redux_form\\inputControl.js",[],{"ruleId":"216","replacedBy":"217"},{"ruleId":"218","replacedBy":"219"},{"ruleId":"220","severity":1,"message":"221","line":30,"column":14,"nodeType":"222","messageId":"223","endLine":30,"endColumn":16},{"ruleId":"224","severity":1,"message":"225","line":28,"column":8,"nodeType":"226","endLine":28,"endColumn":10,"suggestions":"227"},{"ruleId":"220","severity":1,"message":"228","line":43,"column":69,"nodeType":"222","messageId":"223","endLine":43,"endColumn":71},{"ruleId":"229","severity":1,"message":"230","line":2,"column":21,"nodeType":"231","messageId":"232","endLine":2,"endColumn":26},{"ruleId":"229","severity":1,"message":"233","line":10,"column":10,"nodeType":"231","messageId":"232","endLine":10,"endColumn":26},{"ruleId":"229","severity":1,"message":"234","line":10,"column":48,"nodeType":"231","messageId":"232","endLine":10,"endColumn":64},{"ruleId":"229","severity":1,"message":"235","line":10,"column":66,"nodeType":"231","messageId":"232","endLine":10,"endColumn":82},{"ruleId":"229","severity":1,"message":"236","line":24,"column":19,"nodeType":"231","messageId":"232","endLine":24,"endColumn":31},{"ruleId":"229","severity":1,"message":"237","line":24,"column":40,"nodeType":"231","messageId":"232","endLine":24,"endColumn":48},{"ruleId":"229","severity":1,"message":"238","line":24,"column":50,"nodeType":"231","messageId":"232","endLine":24,"endColumn":60},{"ruleId":"229","severity":1,"message":"239","line":24,"column":62,"nodeType":"231","messageId":"232","endLine":24,"endColumn":67},{"ruleId":"229","severity":1,"message":"238","line":22,"column":81,"nodeType":"231","messageId":"232","endLine":22,"endColumn":91},{"ruleId":"229","severity":1,"message":"239","line":22,"column":93,"nodeType":"231","messageId":"232","endLine":22,"endColumn":98},{"ruleId":"229","severity":1,"message":"237","line":22,"column":100,"nodeType":"231","messageId":"232","endLine":22,"endColumn":108},{"ruleId":"216","replacedBy":"240"},{"ruleId":"218","replacedBy":"241"},{"ruleId":"229","severity":1,"message":"242","line":2,"column":10,"nodeType":"231","messageId":"232","endLine":2,"endColumn":16},{"ruleId":"229","severity":1,"message":"243","line":6,"column":10,"nodeType":"231","messageId":"232","endLine":6,"endColumn":20},{"ruleId":"229","severity":1,"message":"244","line":15,"column":9,"nodeType":"231","messageId":"232","endLine":15,"endColumn":13},{"ruleId":"245","severity":1,"message":"246","line":55,"column":17,"nodeType":"247","endLine":55,"endColumn":121},{"ruleId":"220","severity":1,"message":"221","line":30,"column":14,"nodeType":"222","messageId":"223","endLine":30,"endColumn":16},{"ruleId":"224","severity":1,"message":"225","line":28,"column":8,"nodeType":"226","endLine":28,"endColumn":10,"suggestions":"248"},{"ruleId":"220","severity":1,"message":"228","line":44,"column":69,"nodeType":"222","messageId":"223","endLine":44,"endColumn":71},{"ruleId":"229","severity":1,"message":"249","line":48,"column":14,"nodeType":"231","messageId":"232","endLine":48,"endColumn":25},{"ruleId":"229","severity":1,"message":"238","line":22,"column":81,"nodeType":"231","messageId":"232","endLine":22,"endColumn":91},{"ruleId":"229","severity":1,"message":"239","line":22,"column":93,"nodeType":"231","messageId":"232","endLine":22,"endColumn":98},{"ruleId":"229","severity":1,"message":"237","line":22,"column":100,"nodeType":"231","messageId":"232","endLine":22,"endColumn":108},{"ruleId":"229","severity":1,"message":"230","line":2,"column":21,"nodeType":"231","messageId":"232","endLine":2,"endColumn":26},{"ruleId":"229","severity":1,"message":"233","line":10,"column":10,"nodeType":"231","messageId":"232","endLine":10,"endColumn":26},{"ruleId":"229","severity":1,"message":"234","line":10,"column":48,"nodeType":"231","messageId":"232","endLine":10,"endColumn":64},{"ruleId":"229","severity":1,"message":"235","line":10,"column":66,"nodeType":"231","messageId":"232","endLine":10,"endColumn":82},{"ruleId":"229","severity":1,"message":"236","line":19,"column":19,"nodeType":"231","messageId":"232","endLine":19,"endColumn":31},{"ruleId":"229","severity":1,"message":"237","line":19,"column":40,"nodeType":"231","messageId":"232","endLine":19,"endColumn":48},{"ruleId":"229","severity":1,"message":"238","line":19,"column":50,"nodeType":"231","messageId":"232","endLine":19,"endColumn":60},{"ruleId":"229","severity":1,"message":"239","line":19,"column":62,"nodeType":"231","messageId":"232","endLine":19,"endColumn":67},{"ruleId":"245","severity":1,"message":"246","line":118,"column":38,"nodeType":"247","endLine":118,"endColumn":152},"no-native-reassign",["250"],"no-negated-in-lhs",["251"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user.id'. Either include it or remove the dependency array.","ArrayExpression",["252"],"Expected '!==' and instead saw '!='.","no-unused-vars","'Field' is defined but never used.","Identifier","unusedVar","'AiOutlineAndroid' is defined but never used.","'AiOutlinePicture' is defined but never used.","'AiOutlineUserAdd' is defined but never used.","'handleSubmit' is assigned a value but never used.","'pristine' is assigned a value but never used.","'submitting' is assigned a value but never used.","'valid' is assigned a value but never used.",["250"],["251"],"'FcLike' is defined but never used.","'ReactAudio' is defined but never used.","'mone' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["253"],"'updateImage' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"254","fix":"255"},{"desc":"254","fix":"256"},"Update the dependencies array to be: [user.id]",{"range":"257","text":"258"},{"range":"259","text":"258"},[918,920],"[user.id]",[918,920]]